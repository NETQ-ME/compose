type: install
id: netqcore
version: '1.0'
appVersion: latest
name: netqcore
logo: https://netqcore.vercel.app/netq/logo.png
homepage: https://netq.me
categories: 
- apps/tools
description: 
  text: "A tools"
  short: "Gud joob."

globals:
  shortname: app
  path: /root/app
  repo: https://github.com/NETQ-ME/compose

nodes:
  nodeType: dockerengine
  nodeGroup: cp
  cloudlets: 6
  fixedcloudlets: 1
  extip: true
  displayName: AppServer
  addons: [change-domain, update, change-cf-email, change-cf-apikey]
  volumes: ["${globals.path}"]

settings:
  domain:
    fields:
      - name: displayfield
        type: displayfield
        hideLabel: true
        markup: |
          The new domain should already have an A record pointed at this environment's IP address.
      - name: domain
        hideLabel: true
        caption: Domain
        type: string
        vtype: extdomain

onInstall:
  - setup

actions:
  setup:      
    - cmd[cp]: |-
        mkdir -p ${globals.path}
        cd ${globals.path}
        git clone ${globals.repo} --depth 1 .
        rm -rf .git
        rm manifest.yaml
        sed -i \
        -e "s|HOSTNAME=.*|HOSTNAME=${env.domain}|" \
        -e "s|EMAIL=.*|EMAIL=${user.email}|" \
        docker-compose.yml
        docker-compose up -d
    - env.file.AddFavorite:
        nodeGroup: cp
        path: ${globals.path}
        keyword: ${globals.shortname}

addons:
  - id: change-domain
    name: Domain Configuration
    description: Change domain name and issue Let's Encrypt certificates.
    permanent: true
    buttons:
      - confirmText: Are you sure you want to proceed?
        loadingText: Changing domain...
        action: changeDomain
        caption: Change
        successText: The domain has been updated successfully!
        settings: domain
        title: Please specify the new domain name

    actions:
      changeDomain:
        - cmd[cp]: |-
            cd ${globals.path}
            sed -i \
            -e "s|HOSTNAME=.*|HOSTNAME=${settings.domain}|" \
            docker-compose.yml
            docker-compose up -d --force-recreate
    
  - id: change-cf-email
    name: Change Cloudflare Email
    description: Change the Cloudflare email used for DNS updates.
    permanent: true
    buttons:
      - confirmText: Are you sure you want to proceed?
        loadingText: Changing email...
        action: changecfEmail
        caption: Change
        successText: The Cloudflare email has been updated successfully!
        settings: cfEmail
        title: Please specify the new Cloudflare email

    actions:
      changecfEmail:
        - cmd[cp]: |-
            cd ${globals.path}
            sed -i \
            -e "s|CF_Email=.*|CF_Email=${settings.cfEmail}|" \
            docker-compose.yml
            docker-compose up -d --force-recreate

  - id: change-cf-apikey
    name: Change Cloudflare API Key
    description: Change the Cloudflare API key used for DNS updates.
    permanent: true
    buttons:
      - confirmText: Are you sure you want to proceed?
        loadingText: Changing API Key...
        action: changecfApiKey
        caption: Change
        successText: The Cloudflare API key has been updated successfully!
        settings: cfApiKey
        title: Please specify the new Cloudflare API key

    actions:
      changecfApiKey:
        - cmd[cp]: |-
            cd ${globals.path}
            sed -i \
            -e "s|CF_Token=.*|CF_Token=${settings.cfApiKey}|" \
            docker-compose.yml
            docker-compose up -d --force-recreate


  - id: update
    name: Update
    description: Pull the latest version of docker containers
    permanent: true
    buttons:
      - confirmText: Are you sure you want to proceed?
        loadingText: Updating...
        action: pullContainers
        caption: Update
        successText: Your environment has been updated!
        title: Update
    actions:
      pullContainers:
        -  cmd[cp]: |-
            cd ${globals.path}
            docker-compose pull
            docker-compose down
            docker-compose up -d --force-recreate
success: | 
  **${env.displayName}**: [https://${env.domain}/](https://${env.domain}/)
  - If you want to map a custom domain, point an A record at **${nodes.cp.extIPs}** then use the **Domain Configuration** Add-On to change the domain name and issue a new Let's Encrypt cert.

